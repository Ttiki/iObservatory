<?php
# This file was automatically generated by the MediaWiki 1.39.6
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See docs/Configuration.md for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}

# General site settings
$wgSitename = getenv('OBSERVATORY_NAME');
$wgLanguageCode = "en";
$wgShellLocale = "C.UTF-8";

# Paths
$wgScriptPath = "/mediawiki";
$wgResourceBasePath = $wgScriptPath;
$wgUploadPath = "$wgScriptPath/images";
$wgUploadDirectory = "$IP/images";

# Server settings
$wgServer = "//" . getenv('DOMAIN_NAME');

# Database settings
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = getenv('MEDIAWIKI_DB_NAME');
$wgDBuser = getenv('MEDIAWIKI_DB_USER');
$wgDBpassword = getenv('MEDIAWIKI_DB_PWD');
$wgDBprefix = "";
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Upload settings
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgUseInstantCommons = true;

# Email settings
$wgEnableEmail = true;
$wgEnableUserEmail = true;
$wgEmailAuthentication = true;
$wgPasswordSender = getenv('MEDIAWIKI_PWD_EMAIL');
$wgPasswordSenderName = "UNITApedia";
$wgEmergencyContact = getenv('MEDIAWIKI_CONTACT_EMAIL');

# Security settings
$wgSecretKey = getenv('MEDIAWIKI_SECRET_KEY');
$wgUpgradeKey = getenv('MEDIAWIKI_UPGRADE_KEY');

# HTTPS settings
$wgCanonicalServer = $wgServer;
$wgForceHTTPS = true;

# Favicon and Logos (mounted via volumes)
// $wgFavicon = "$wgResourceBasePath/resources/assets/favicon.svg";
// $wgLogos = [
//     '1x' => "$wgResourceBasePath/resources/assets/logo.png",
//     '1.5x' => "$wgResourceBasePath/resources/assets/logo@1.5x.png",
//     '2x' => "$wgResourceBasePath/resources/assets/logo@2x.png",
//     'svg' => "$wgResourceBasePath/resources/assets/logo.svg",
//     'icon' => "$wgResourceBasePath/resources/assets/favicon.svg",
// ];

# Default skin
$wgDefaultSkin = "vector-2022";
wfLoadSkin('Vector');

# Permissions settings
$wgGroupPermissions['*']['read'] = true;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['user']['edit'] = false;
$wgGroupPermissions['sysop']['edit'] = true;
$wgGroupPermissions['sysop']['createaccount'] = true;

# Upload allowed extensions
$wgFileExtensions = [
    'png', 'gif', 'jpg', 'jpeg', 'doc', 'xls', 'pdf', 'ppt', 'docx', 'xlsx', 'pptx', 'svg', 'odt', 'ods', 'odp'
];

# Mime type blacklist
$wgMimeTypeBlacklist = [
    "text/html", "text/javascript", "application/x-shellscript",
    "application/x-php", "text/x-php", "text/x-python",
    "text/x-perl", "application/x-msdownload"
];

# Debugging and Production
$wgShowExceptionDetails = false;
$wgShowDBErrorBacktrace = false;
$wgShowDebug = false;
$wgDevelopmentWarnings = false;
$wgShowSQLErrors = false;

# Timezone settings
$wgLocaltimezone = "UTC";
date_default_timezone_set($wgLocaltimezone);

# Licensing and footer
$wgRightsPage = "";
$wgRightsUrl = "https://creativecommons.org/publicdomain/zero/1.0/";
$wgRightsText = "Creative Commons Zero (public domain)";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-0.png";

$wgFooterIcons['poweredby']['mediawiki'] = [
    "src" => "$wgResourceBasePath/resources/assets/poweredby_mediawiki_88x31.png",
    "url" => "https://www.mediawiki.org/",
    "alt" => "Powered by MediaWiki",
];

# Custom queries


## Load extensions
wfLoadExtension('Arrays');
wfLoadExtension('Babel');
wfLoadExtension('CategoryTree');
wfLoadExtension('Cargo');
wfLoadExtension('Cite');
wfLoadExtension('CiteThisPage');
wfLoadExtension( 'cldr' );
wfLoadExtension( 'CleanChanges' );
wfLoadExtension('CodeEditor');
wfLoadExtension('CodeMirror');
wfLoadExtension('ConfirmEdit');
wfLoadExtension('DataTransfer');
wfLoadExtension('ExternalData');
wfLoadExtension('FlexDiagrams');
wfLoadExtension('Gadgets');
wfLoadExtension('HeaderTabs');
wfLoadExtension('IframePage');
wfLoadExtension('ImageMap');
wfLoadExtension('InputBox');
wfLoadExtension('Interwiki');
wfLoadExtension('MagicNoCache');
wfLoadExtension('Maps');
wfLoadExtension('Math');
wfLoadExtension('ModernTimeline');
wfLoadExtension('MultimediaViewer');
wfLoadExtension('Network');
wfLoadExtension('Nuke');
wfLoadExtension( 'OpenIDConnect' );
wfLoadExtension('PageForms');
wfLoadExtension('PageImages');
wfLoadExtension('PageSchemas');
wfLoadExtension('ParserFunctions');
wfLoadExtension('PdfHandler');
wfLoadExtension( 'PluggableAuth' );
wfLoadExtension('Poem');
wfLoadExtension('Renameuser');
wfLoadExtension('ReplaceText');
wfLoadExtension('SecureLinkFixer');
wfLoadExtension('Scribunto');
wfLoadExtension('SpamBlacklist');
wfLoadExtension('SyntaxHighlight_GeSHi');
// wfLoadExtension('TabberNeue');
wfLoadExtension('TemplateData');
wfLoadExtension('TemplateWizard');
wfLoadExtension('TextExtracts');
wfLoadExtension('TitleBlacklist');
wfLoadExtension('Translate');
wfLoadExtension('TreeAndMenu');
wfLoadExtension('UniversalLanguageSelector');
wfLoadExtension('Widgets');
wfLoadExtension('WikiEditor');

// Semantic Media Wiki Stack
wfLoadExtension( 'SemanticMediaWiki' );
// enableSemantics(getenv('DOMAIN_NAME'));
wfLoadExtension( 'SemanticResultFormats' );
wfLoadExtension( 'SemanticCompoundQueries' );
wfLoadExtension( 'SemanticFormsSelect' );
wfLoadExtension( 'Maps' );
wfLoadExtension( 'Cargo' );
wfLoadExtension( 'ModernTimeline' );
wfLoadExtension( 'Network' );

$smwgNamespacesWithSemanticLinks["DATASRC"] = true;
