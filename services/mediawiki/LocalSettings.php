<?php
ini_set('display_errors', 0);
# This file was automatically generated by the MediaWiki 1.39.6
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See docs/Configuration.md for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}

# General site settings
$wgSitename = getenv('OBSERVATORY_NAME');
$wgLanguageCode = "en";
$wgShellLocale = "C.UTF-8";
$wgRawHtml = true;



# Paths
$wgScriptPath = "";
$wgResourceBasePath = $wgScriptPath;
$wgUploadDirectory = "$IP/images";

# Server settings
$wgServer = "https://" . getenv('DOMAIN_NAME');

# Database settings
$wgDBtype = "mysql";
$wgDBserver = "mariadb";
$wgDBname = getenv('MEDIAWIKI_DB_NAME');
$wgDBuser = getenv('MEDIAWIKI_DB_USER');
$wgDBpassword = getenv('MEDIAWIKI_DB_PWD');
$wgDBprefix = "";
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Upload settings
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgUseInstantCommons = true;

# Email settings
// $wgEnableEmail = true;
// $wgEnableUserEmail = true;
// $wgEmailAuthentication = true;
// $wgPasswordSender = getenv('MEDIAWIKI_PWD_EMAIL');
// $wgPasswordSenderName = "";
// $wgEmergencyContact = getenv('MEDIAWIKI_CONTACT_EMAIL');

# Security settings
$wgSecretKey = getenv('MEDIAWIKI_SECRET_KEY');
$wgUpgradeKey = getenv('MEDIAWIKI_UPGRADE_KEY');

# HTTPS settings
$wgCanonicalServer = $wgServer;
$wgForceHTTPS = true;

$wgPluggableAuth_EnableLocalLogin=true;
#Keycloack exemple
// $wgPluggableAuth_Config[] = [
//     'plugin' => 'OpenIDConnect',
//     'data' => [
//         'providerURL' => 'https://keycloak.local:8080/realms/acme',
//         'clientID' => 'mediawiki',
//         'clientsecret' => '12345'
//     ]
// ];



# Favicon and Logos (mounted via volumes)
$wgFavicon = "$wgResourceBasePath/resources/assets/favicon.svg";
$wgLogos = [
    '1x' => "$wgResourceBasePath/resources/assets/logo.png",
    '1.5x' => "$wgResourceBasePath/resources/assets/logo@1.5x.png",
    '2x' => "$wgResourceBasePath/resources/assets/logo@2x.png",
    'svg' => "$wgResourceBasePath/resources/assets/logo.svg",
    'icon' => "$wgResourceBasePath/resources/assets/favicon.svg",
];

# Default skin
$wgDefaultSkin = "vector-2022";
wfLoadSkin('Vector');
# Force all users to use Vector 2022
$wgVectorDefaultSkinVersion = '2';

# Do NOT allow users to switch to vector-2011
$wgVectorShowSkinPreferences = false;


## Permissions
$wgDefaultUserOptions['usenewrc'] = 1;

$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = true;
$wgGroupPermissions['*']['createpage'] = true;
$wgGroupPermissions['*']['editsection'] = true;
$wgGroupPermissions['*']['pageforms-create'] = true; #Added meanwhile Virtual Campus is configured (Rights for Recipes)
$wgGroupPermissions['*']['pageforms-edit'] = true; #Added meanwhile Virtual Campus is configured (Rights for Recipes)
$wgGroupPermissions['user']['createclass'] = false;
$wgGroupPermissions['user']['editmyusercss'] = false;
$wgGroupPermissions['user']['editcontentmodel'] = false;
$wgGroupPermissions['user']['editmyuserjson'] = false;
$wgGroupPermissions['user']['editmyuserjs'] = false;
$wgGroupPermissions['user']['editmyuserjsredirect'] = false;
$wgGroupPermissions['user']['edit'] = false;
$wgGroupPermissions['user']['editsection'] = false;
$wgGroupPermissions['sysop']['createaccount'] = true;
$wgGroupPermissions['sysop']['edit'] = true;
$wgGroupPermissions['sysop']['createclass'] = true;
$wgGroupPermissions['sysop']['editsection'] = false;
$wgGroupPermissions['sysop']['smw-admin'] = true;
$wgGroupPermissions['sysop']['smw-pageedit'] = true;
$wgGroupPermissions['sysop']['smw-patternedit'] = true;
$wgGroupPermissions['sysop']['smw-schemaedit'] = true;
$wgGroupPermissions['sysop']['smw-vieweditpageinfo'] = true;
$wgGroupPermissions['sysop']['smw-viewentityassociatedrevisionmismatch'] = true;
$wgGroupPermissions['sysop']['smw-viewjobqueuewatchlist'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['*']['read'] = true;
$wgGroupPermissions['Visiteur']['edit'] = false;
$wgGroupPermissions['Visiteur']['read'] = true;
$wgGroupPermissions['translator']['translate'] = true;
$wgGroupPermissions['translator']['skipcaptcha'] = true; // T36182: needed with ConfirmEdit
$wgGroupPermissions['recipes']['createpage'] = true;
$wgGroupPermissions['recipes']['edit'] = true;
$wgGroupPermissions['recipes']['pageforms-create'] = true;
$wgGroupPermissions['recipes']['pageforms-edit'] = true;
$wgGroupPermissions['recipes']['editsection'] = false;

## Licensing and copyright
$wgRightsPage = "";
$wgRightsUrl = "https://creativecommons.org/publicdomain/zero/1.0/";
$wgRightsText = "Creative Commons Zero (domaine public)";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-0.png";
$wgFooterIcons = [

    "copyright" => [
        "copyright" => [
            "src" => $wgRightsIcon
        ],
    ],
    "poweredby" => [
        "mediawiki" => [
            // Defaults to point at
            // "$wgResourceBasePath/resources/assets/poweredby_mediawiki_88x31.png"
            // plus srcset for 1.5x, 2x resolution variants.
            "src" => "$wgResourceBasePath/resources/assets/poweredby_mediawiki_88x31.png",
            "url" => "https://www.mediawiki.org/",
            "alt" => "Powered by MediaWiki",
        ],
    ],
];



## External data sources
#Data Dir Dev
$wgExternalDataSources['DDD']['path'] = '/home/hub/data/files/dev/';
$wgExternalDataSources['ID']['type'] = 'postgres';

## Other settings
$wgHeaderTabsEditTabLink = false;
$wgRawHtml = true;
$wgIframePageSrc = [
    'YouTube' => 'https://www.youtube.com/embed/',
    'Vimeo' => 'https://player.vimeo.com/video/',
];
$wgIframePageAllowPath = true;
$wgFileExtensions = [
    'png', 'gif', 'jpg', 'jpeg', 'doc',
    'xls', 'mpp', 'pdf', 'ppt', 'tiff', 'bmp', 'docx', 'xlsx',
    'pptx', 'ps', 'odt', 'ods', 'odp', 'odg', 'svg'
];
$wgMimeTypeBlacklist = array ( "text/html", "text/javascript", "text/x-javascript", "application/x-shellscript", "application/x-php",
    "text/x-php", "text/x-python", "text/x-perl", "text/x-bash", "text/x-sh", "text/x-csh", "text/scriptlet", "application/x-msdownload",
     "application/x-msmetafile", "application/x-opc+zip", "application/vnd.ms-powerpoint", "application/vnd.msexcel" );

$smwgQMaxInlineLimit = 2000;
$smwgQMaxDepth = 10;
$smwgQMaxSize = 50;
$srfgMapProvider = 'OpenStreetMap.Mapnik';
$srfgMapProviderDark = 'OpenStreetMap.Mapnik';
$wgCargoPageDataColumns[] = 'pageIDOrRedirect';
$wgEnableJavaScriptTest = false;
$wgPFEnableStringFunctions = true;
$wgSVGConverter = 'ImageMagick';
$wgCookieWarningEnabled = false;

# Debugging and Production
$wgShowExceptionDetails = true;
$wgShowDBErrorBacktrace = true;
$wgShowDebug = true;
$wgDevelopmentWarnings = true;
$wgShowSQLErrors = true;

## Namespaces
define("DOC", 800);
define("DOC_TALK", 801);
$wgExtraNamespaces[DOC] = "Doc";
$wgExtraNamespaces[DOC_TALK] = "Doc_talk";
// $wgNamespacePermissionLockdown[DOC]['*'] = ['sysop'];
define("DATASRC", 810);
define("DATASRC_TALK", 811);
$wgExtraNamespaces[DATASRC] = "DataSrc";
$wgExtraNamespaces[DATASRC_TALK] = "DataSrc_talk";
// $wgNamespacePermissionLockdown[DATASRC]['*'] = ['sysop'];
define( 'NS_RECIPES', 805 );
define( 'NS_RECIPES_TALK', 806 );
$wgExtraNamespaces[NS_RECIPES] = "Recipes";
$wgExtraNamespaces[NS_RECIPES_TALK] = "Recipes_talk";


# Timezone settings
$wgLocaltimezone = "UTC";
date_default_timezone_set($wgLocaltimezone);

# Licensing and footer
$wgRightsPage = "";
$wgRightsUrl = "https://creativecommons.org/publicdomain/zero/1.0/";
$wgRightsText = "Creative Commons Zero (public domain)";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-0.png";

$wgFooterIcons['poweredby']['mediawiki'] = [
    "src" => "$wgResourceBasePath/resources/assets/poweredby_mediawiki_88x31.png",
    "url" => "https://www.mediawiki.org/",
    "alt" => "Powered by MediaWiki",
];

# Custom queries


## Load extensions
wfLoadExtension('Arrays');
wfLoadExtension('Babel');
wfLoadExtension('CategoryTree');
wfLoadExtension('Cargo');
wfLoadExtension('Cite');
wfLoadExtension('CiteThisPage');
wfLoadExtension( 'cldr' );
wfLoadExtension( 'CleanChanges' );
wfLoadExtension('CodeEditor');
wfLoadExtension('CodeMirror');
wfLoadExtension('ConfirmEdit');
wfLoadExtension('DataTransfer');
wfLoadExtension('ExternalData');
wfLoadExtension( 'ECharts' );
wfLoadExtension('FlexDiagrams');
wfLoadExtension('Gadgets');
wfLoadExtension('HeaderTabs');
wfLoadExtension('IframePage');
wfLoadExtension('ImageMap');
wfLoadExtension('InputBox');
wfLoadExtension('Interwiki');
wfLoadExtension('MagicNoCache');
wfLoadExtension('Maps');
wfLoadExtension('Math');
wfLoadExtension('ModernTimeline');
wfLoadExtension('MultimediaViewer');
wfLoadExtension('Network');
wfLoadExtension('Nuke');
// wfLoadExtension( 'OpenIDConnect' );
wfLoadExtension('PageForms');
wfLoadExtension('PageImages');
wfLoadExtension('PageSchemas');
wfLoadExtension('ParserFunctions');
wfLoadExtension('PdfHandler');
wfLoadExtension( 'PluggableAuth' );
wfLoadExtension('Poem');
wfLoadExtension('Renameuser');
wfLoadExtension('ReplaceText');
wfLoadExtension('SecureLinkFixer');
wfLoadExtension('Scribunto');
wfLoadExtension('SpamBlacklist');
wfLoadExtension('SyntaxHighlight_GeSHi');
wfLoadExtension('TabberNeue');
wfLoadExtension('TemplateData');
wfLoadExtension('TemplateWizard');
wfLoadExtension('TextExtracts');
wfLoadExtension('TitleBlacklist');
wfLoadExtension('Translate');
wfLoadExtension('TreeAndMenu');
wfLoadExtension('UniversalLanguageSelector');
wfLoadExtension( 'Variables' );
wfLoadExtension( 'VisualEditor' );
wfLoadExtension('Widgets');
wfLoadExtension('WikiEditor');

// Semantic Media Wiki Stack
wfLoadExtension( 'SemanticMediaWiki' );
enableSemantics(getenv('DOMAIN_NAME'));
wfLoadExtension( 'SemanticResultFormats' );
wfLoadExtension( 'SemanticCompoundQueries' );
wfLoadExtension( 'SemanticFormsSelect' );

$smwgNamespacesWithSemanticLinks[DATASRC] = true;

$wgWidgets['synthesiavideo'] = [
    'type'    => 'html',
    'source'  => '<div style="position:relative;overflow:hidden;aspect-ratio:1920/1080">
      <iframe src="https://share.synthesia.io/embeds/videos/$1"
              style="position:absolute;width:100%;height:100%;border:none"
              allowfullscreen allow="encrypted-media; fullscreen"
              loading="lazy"
              title="Synthesia video player"></iframe>
    </div>',
    'params'  => [ 'videoId' ],
  ];


  # Tell MediaWiki to use the local text table for content addresses starting with tt:
$wgMultiContentRevisionSchemaMigrationStage = MIGRATION_NEW;
$wgDefaultExternalStore = false;
$wgExternalStores = [];
$wgExternalServers = [];
$wgLegacyEncoding = 'utf-8';

// $wgSMTP = [
//     'host' => 'localhost',      // Since Postfix is running locally
//     'IDHost' => '',    // This should match your hostname
//     'port' => 25,               // Default SMTP port for Postfix
//     'username' => null,         // No authentication if using local Postfix
//     'password' => null,         // No password required for local SMTP
//     'auth' => false,            // No authentication for local mail delivery
//     'secure' => false,          // No encryption for local delivery (unless you want to set up TLS)
// ];
// $wgDebugLogGroups['mail'] = '/tmp/mediawiki-mail.log';

$wgExternalDataAllowGetters = true;
## Include External data sources (queries) here in these includes to clean the code


